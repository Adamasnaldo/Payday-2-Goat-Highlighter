name: Create new release
on:
   workflow_dispatch

env:
    VERSION: ${{ github.event.inputs.version }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Archive Mod
      run: |
         zip -r "./GoatHighlighter.zip" "./Goat Highlighter/"
    - name: Get Mod Version
      run: |
         VERSION=$(cat "Goat Highlighter/mod.txt" | grep -E '^[ \t]*"version": "([^"]+)",[ \t]*' | grep -oE '[0-9.]+')
         echo "Found version: ${VERSION}"
         echo "VERSION=${VERSION}" >> $GITHUB_ENV
    - name: Create New Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Version ${{ env.VERSION }}
        draft: false
        prerelease: false
        body_path: ./.github/Changelog.md
    - name: Upload Mod Zip to Release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./GoatHighlighter.zip
        asset_name: GoatHighlighter.zip
        asset_content_type: application/zip
    - name: Calculate Hash
      id: hash
      run: |
        echo "HASH=$(python ./.github/SuperBLT_Hasher.py "./Goat Highlighter/")" >> $GITHUB_ENV
    - name: Create mod meta file
      id: create_meta_file
      run: |
        cat <<EOM > ./meta.json
        [
            {
                "ident" : "goat-highlighter",
                "hash" : "${HASH}",
                "patchnotes_url" : "https://github.com/$GITHUB_REPOSITORY/releases/latest",
                "download_url" : "https://github.com/$GITHUB_REPOSITORY/releases/latest/download/GoatHighlighter.zip"
            }
        ]
        EOM
    - name: Upload meta file to Release
      id: upload-meta-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./meta.json
        asset_name: meta.json
        asset_content_type: application/json
    - name: Upload changelog file to Release
      id: upload-changelog-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./.github/Changelog.md
        asset_name: Changelog.md
        asset_content_type: text/markdown